// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.5
// source: mather.proto

package mather

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// MatherClient is the client API for Mather service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type MatherClient interface {
	DoMath(ctx context.Context, in *MathRequest, opts ...grpc.CallOption) (*MathResponse, error)
}

type matherClient struct {
	cc grpc.ClientConnInterface
}

func NewMatherClient(cc grpc.ClientConnInterface) MatherClient {
	return &matherClient{cc}
}

func (c *matherClient) DoMath(ctx context.Context, in *MathRequest, opts ...grpc.CallOption) (*MathResponse, error) {
	out := new(MathResponse)
	err := c.cc.Invoke(ctx, "/proto.Mather/DoMath", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MatherServer is the server API for Mather service.
// All implementations must embed UnimplementedMatherServer
// for forward compatibility
type MatherServer interface {
	DoMath(context.Context, *MathRequest) (*MathResponse, error)
	mustEmbedUnimplementedMatherServer()
}

// UnimplementedMatherServer must be embedded to have forward compatible implementations.
type UnimplementedMatherServer struct {
}

func (UnimplementedMatherServer) DoMath(context.Context, *MathRequest) (*MathResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DoMath not implemented")
}
func (UnimplementedMatherServer) mustEmbedUnimplementedMatherServer() {}

// UnsafeMatherServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to MatherServer will
// result in compilation errors.
type UnsafeMatherServer interface {
	mustEmbedUnimplementedMatherServer()
}

func RegisterMatherServer(s grpc.ServiceRegistrar, srv MatherServer) {
	s.RegisterService(&Mather_ServiceDesc, srv)
}

func _Mather_DoMath_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MathRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MatherServer).DoMath(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Mather/DoMath",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MatherServer).DoMath(ctx, req.(*MathRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// Mather_ServiceDesc is the grpc.ServiceDesc for Mather service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Mather_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Mather",
	HandlerType: (*MatherServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DoMath",
			Handler:    _Mather_DoMath_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mather.proto",
}
